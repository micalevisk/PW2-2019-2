<div class="main__game container clearfix">

  <div class="large-board">
    <div id="board"></div>
    <div class="pt-1 text-center">
      {{#unless match.waitingOpponent}}
      <div id="status" class="game-status"></div>
      {{/unless}}
      <div class="opponents">
        {{#if match.waitingOpponent}}
        <span class="text-white text-capitalize">aguardando oponente&hellip;</span>
        {{else}}
        <span class="piece-{{getOwnerPieceColor match.author_color}}"><i class="fas fa-chess-king"></i></span>
        <span id="user-{{match.userOwner.id}}" class="text-white text-capitalize">&nbsp;{{match.userOwner.name}}</span>
        &times;
        <span id="user-{{match.userOpponent.id}}"
          class="text-white text-capitalize">{{match.userOpponent.name}}&nbsp;</span>
        <span class="piece-{{getOpponentPieceColor match.author_color}}"><i class="fas fa-chess-king"></i></span>
        {{/if}}
      </div>
    </div>
  </div>

  <div class="chat">
    <div id="chat-history">
      <ul id="messages"></ul>
    </div>
    <div class="chat-message">
      <textarea id="message-to-send" placeholder="Escreva sua mensagem" rows="3"></textarea>
      <button id="send-message" class="btn disabled" data-toggle="tooltip" data-placement="bottom" title="Enviar mensagem" disabled>Enviar</button>
    </div>
  </div>

</div>

{{#if match.waitingOpponent}}
<audio preload="auto" autoplay loop>
  <source src="https://www.chess.com/bundles/web/sounds/countdown-2-15.mp3" type="audio/mpeg"></audio>
{{else}}
{{#if match.hasWinner}}
<audio preload="auto" autoplay>
  <source src="https://www.chess.com/bundles/web/sounds/webm/game-end.webm" type="audio/webm">
  <source src="https://www.chess.com/bundles/web/sounds/ogg/game-end.ogg" type="audio/ogg">
  <source src="https://www.chess.com/bundles/web/sounds/mp3/game-end.mp3" type="audio/mpeg">
  <source src="https://www.chess.com/bundles/web/sounds/wav/game-end.wav" type="audio/wav"></audio>
{{else}}
<div id="game-audios" style="display: none;">

  <audio preload="auto" data-fn="gameStart">
    <source src="https://www.chess.com/bundles/web/sounds/webm/game-start.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/game-start.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/game-start.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/game-start.wav" type="audio/wav"></audio>

  <audio preload="auto" data-fn="moveSelf">
    <source src="https://www.chess.com/bundles/web/sounds/webm/move-self.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/move-self.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/move-self.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/move-self.wav" type="audio/wav"></audio>

  <audio preload="auto" data-fn="moveCheck">
    <source src="https://www.chess.com/bundles/web/sounds/webm/move-check.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/move-check.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/move-check.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/move-check.wav" type="audio/wav"></audio>


  <audio preload="auto" data-fn="moveOpponent">
    <source src="https://www.chess.com/bundles/web/sounds/webm/move-opponent.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/move-opponent.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/move-opponent.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/move-opponent.wav" type="audio/wav"></audio>

  <audio preload="auto" data-fn="capture">
    <source src="https://www.chess.com/bundles/web/sounds/webm/capture.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/capture.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/capture.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/capture.wav" type="audio/wav"></audio>

  <audio preload="auto" data-fn="promote">
    <source src="https://www.chess.com/bundles/web/sounds/webm/promote.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/promote.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/promote.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/promote.wav" type="audio/wav"></audio>

  <audio preload="auto" data-fn="illegal">
    <source src="https://www.chess.com/bundles/web/sounds/webm/illegal.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/illegal.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/illegal.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/illegal.wav" type="audio/wav"></audio>

  <audio preload="auto" data-fn="notify">
    <source src="https://www.chess.com/bundles/web/sounds/webm/notify.webm" type="audio/webm">
    <source src="https://www.chess.com/bundles/web/sounds/ogg/notify.ogg" type="audio/ogg">
    <source src="https://www.chess.com/bundles/web/sounds/mp3/notify.mp3" type="audio/mpeg">
    <source src="https://www.chess.com/bundles/web/sounds/wav/notify.wav" type="audio/wav"></audio>

</div>
{{/if}}
{{/if}}


{{#section 'script'}}

<script type="text/javascript">
  const matchId = '{{match.id}}';

  const socket = io({
    transportOptions: {
      polling: {
        extraHeaders: {
          'x-matchid': matchId,
          'x-uid': '{{session.userId}}',
          'x-uname': '{{session.userName}}',
        },
      },
    },
  });
</script>

{{#if match.waitingOpponent}}
<script type="text/javascript">
  socket.on('match:set-opponent', function setOpponent(actionOpponent) {
    if (matchId !== actionOpponent.matchId) return; // TODO: substituir essa lógica por `socket rooms`

    document.location.reload(true); // Reload the current page without use the cache
    // to re-ender the view content.
  });
</script>
{{else}}
{{#if match.userIsOpponent}} {{!-- NOTE: entra aqui também quando a partida está empatada já que não tem winner. --}}
<script type="text/javascript">
  socket.emit('match:new-opponent');
</script>
{{/if}}
{{/if}}

<script src="/js/main/game.js"></script>
<script type="text/javascript">
  const myUserId = '{{session.userId}}';
  const userIsOpponent = JSON.parse('{{match.userIsOpponent}}');
  const opponentUserId = userIsOpponent ? '{{match.userOwner.id}}' : '{{match.userOpponent.id}}';

  const mapUidToUserDate = {
    [myUserId]: {
      fullColor: '{{match.userFullColor}}',
      name: '{{session.userName}}',
    },
    [opponentUserId]: {
      fullColor: '{{match.opponentFullColor}}',
      name: userIsOpponent ? '{{match.userOwner.name}}' : '{{match.userOpponent.name}}',
    },
  };

  startBoardAndGame({
    gameOnHold: JSON.parse('{{match.waitingOpponent}}') || socket.disconnected,
    position: '{{match.fen}}',
    matchId,
    myUserId,
    myFullColor: mapUidToUserDate[myUserId].fullColor,
    opponentUserId,
    opponentFullColor: mapUidToUserDate[opponentUserId].fullColor,
  });

  startChat({
    pastMessages: JSON.parse('{{{json messages}}}'),
    matchId,
    userIsOpponent,
    myUserId,
    mapUidToUserDate,
  });

  window.startBoardAndGame = null;// Prevent more than one call
  window.startChat = null;// Prevent more than one call
</script>

{{/section}}
